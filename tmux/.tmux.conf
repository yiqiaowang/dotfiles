#   __
#  / /___ _  __ ____ __
# / __/  ' \/ // /\ \ /
# \__/_/_/_/\_,_//_\_\
#

# General settings
set-option -g set-titles on
set-option -s escape-time 0
set-option -g base-index 1
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g mouse on

# Windows settings
set-window-option -g automatic-rename off
set-window-option -g pane-base-index 1
set-window-option -g monitor-activity on
set-window-option -g mode-keys vi

## Bindings
# Rebind prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# split panes using | and -
unbind %
bind \ split-window -h
unbind '"'
bind - split-window -v

# reloda tmux configuration
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded. "

# Pane resizing
bind-key -n C-Up resize-pane -U 10
bind-key -n C-Down resize-pane -D 10
bind-key -n C-Left resize-pane -L 15
bind-key -n C-Right resize-pane -R 15

# Smart pane switching with awareness of vim splits
# https://blog.bugsnag.com/tmux-and-vim/
# https://github.com/christoomey/vim-tmux-navigator
# https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iq vim'
is_fzf='echo "#{pane_current_command}" | grep -iq fzf'
tmux_command="tmux display-message -p '#{pane_current_command}'"

bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-j run "($is_vim || $is_fzf) && tmux send-keys C-j || \
                 tmux select-pane -D"
bind -n C-k run "($is_vim || $is_fzf) && tmux send-keys C-k || \
                 tmux select-pane -U"
bind-key -n C-BSpace if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-BSpace select-pane -l

bind C-l send-keys 'C-l'
# X clipboard integration with xclip
# https://wiki.archlinux.org/index.php/tmux
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
